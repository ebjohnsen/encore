module Active
active class Active[inner]
  var state : inner
  def init(factory : () -> inner) : unit
    this.state = factory()
  end
  def apply(f : inner -> unit) : unit
    f(this.state)
  end
  def map(f : inner -> inner) : unit
    this.state = f(this.state)
  end
  def getState[sharable v](extractor : inner -> v) : v
    extractor(this.state)
  end
end
